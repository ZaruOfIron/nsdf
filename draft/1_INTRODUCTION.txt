１．イントロダクション
　オタゴ大学での最近の３年間において、我々は音を分析し、アマチュアとプロの両方の音楽家への、有益で実践的なフィードバックを提供するための、コンピュータの使用の方法を調査し続けている。我々は非公式にこの活動を、バイオリン奏者であり作曲家のジュゼッペ・タルティーニにあやかって、タルティーニ・プロジェクトと名付けた。1714年にタルティーニは、二つの関連した音符が同時にバイオリンで弾かれたとき、第三の音が聞かれることを発見した。彼は自分の教え子達に、彼らの演奏が正しい音程になることを確実にするための工夫として、この第三の音に聞き耳を立てるよう教えた。
　音楽家達が自らの芸術を改良するのを助けるための有益な情報を提供するのと同じように、我々はコンピュータから視覚的なフィードバックを使っている。我々のシステムは、初心者達が音程を聞き分けるのを学ぶのを助けたり、またプロ達が表情豊かな抑揚で彼らが作る必要がある微妙な選択のいくつかを理解することを助けることができる。
　音程は、どのくらい音符が高くまたは低く聞こえるかという認知であるが、一方で、基本周波数または信号内の主繰り返し率（main repetition rate）と密接に対応する周波数として考えられることができる。f0の推定は非常に歴史がある。それは音声認識や音楽情報検索、音楽家達が自分の楽器をチューンするのを助ける携帯「チューナー」で使われている。既存の音程推測のためのアルゴリズムには、the Average Magnitude Difference Function (AMDF)、Harmonic Product Spectrum (HPS)、Log Harmonic Product Spectrum、Phase Vocoder、Channel Vocoder、Parallel Processing Pitch Detector[6]、Square Difference Function (SDF) [1]、Cepstral Pitch Determination [5]、Subharmonic-to-harmonic ratio[8]、Super Resolution Pitch Detector (SRPD) [4]がある。
　我々はすでに、リアルタイムで音楽家たちに有益なフィードバックを提供できることを証明した。特に、我々は見事にプロのバイオリン奏者のビブラートの形を表示し、少なくとも一人のアマチュアのバイオリン奏者が、ボウ・ダイレクションでのよりなめらかな変化を開発することを助けた。いったんf0が知られると、音のフルのハーモニックの分析はリアルタイムで可能になり、我々は音楽家たちにとって有益なたくさんの音の他の側面を表示することができる。この論文では、我々は、McLeod Pitch Method（MPM）――我々の最新かつ、たくさん改善された基本音程を見つける方法――のみを扱う。
　MPMは44.1kHzのサンプリングレートでリアルタイムで動く。それはローパスフィルターなしで動くため、バイオリンのような高調和周波数の音をさばくことができ、確実にわずかな音程の変化を表示することができる。MPMは音程を補正する後処理なしで、よく動くことができる。後処理は他の音程検出器では一般的な要件である。
　タルティーニ・システムには、内耳への信号の強さをイコライズするオプションがある。一番よく聞こえる3700Hzあたりの周波数と比較して、あまり感じ取ることのない低周波数を減少させる傾向がある、標準的な音量イコライズ化曲線は使われる。これは、音程と互いにより関係があるなにかへの、直接的な基本周波数の推定からの動きを助ける。
　フーリエ・ドメイン（？）を使う既存のピッチアルゴリズムは、スペクトル漏れに悩まされる。これは、データの中で選ばれた有限の窓は、いつも信号の周期の全体の数を含むとは限らないからだ。この問題への一般的な解決策は、窓関数を使って、窓のエッジのデータをなめらかにして、漏れを減らすことだ。これは、同じ周波数分解能のためにより大きな窓の大きさを要求する。似た問題が、分数の周期を内包する窓が、インプットのフェイズに依存する異なる場所での最大を生成する、自己相関などのある時間の領域法で発生する（？）。しかしながら、MPMはエッジの問題による影響をより受けにくい正規化関数を紹介する。相関の各側の上の期間を別々で追跡する（？）。
　我々のNormalised Square Difference Function（NSDF）の早い計算を説明するために、 Autocorrelation Function（ACF）とSquared Difference Function（SDF）の間の関係をはじめに説明する必要がある。これを、我々は２章と３章で行う。その早い計算はAFCのための普通の方法に依存している。これが使われる方法は６章で説明されている。NSDFは、どれだけトーンに似ているかを説明している、音の明瞭さの推定を自動的に生成する。これは基本的に、関数の選ばれた最大値の値である（７章）。
